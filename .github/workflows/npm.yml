# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [15.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.3
      with:
          github_token: ${{ secrets.GITHUBACCESS }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - name: Get package version
      id: vars
      shell: bash
      run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=pkg_version::$(node -e "console.log(require('./package.json').version);")"
    - name: Add & Commit
      uses: EndBug/add-and-commit@v4.2.0
      with:
          add: "dist"
          force: true
          message: "Built ${{ steps.vars.outputs.sha_short }}"
          ref: "release/v${{ steps.vars.outputs.pkg_version }}"
          tag: "v${{ steps.vars.outputs.pkg_version }}"
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUBACCESS }} # Provided by Github Actions
    - run: npm test

  package:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 15.x
        uses: actions/setup-node@v1
        with:
          node-version: 15.x
      - run: npm ci
      - run: npm version prerelease --preid=ci-$GITHUB_RUN_ID --no-git-tag-version
      - run: npm pack

#      - name: publish to artifactory
#        uses: advancedcsg-open/action-jfrog-cli@master
#        with:
#          url: 'https://artifactorygcp.jfrog.io/'
#          credentials type: 'apikey'
#          apikey: ${{ secrets.JF_ARTIFACTORY_APIKEY }}
#          args: u "dist/*" "/test/repo/path/" --recursive=true --build-name=mytestingapp

      - name: Installing Jfrog
        uses: jfrog/setup-jfrog-cli@v1
      - run: jfrog --version
      - run: jfrog rt c ci-userdetails --access-token eyJ2ZXIiOiIyIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYiLCJraWQiOiJ4MWxhaDBzMkpCR1lEUDVpM0hjRkNNYnNjZHJLNm1CMkF6UXA5SDJIWG40In0.eyJzdWIiOiJqZmZlQDAwMFwvdXNlcnNcL2NpLXVzZXIiLCJzY3AiOiJhcHBsaWVkLXBlcm1pc3Npb25zXC9hZG1pbiBhcGk6KiIsImF1ZCI6WyJqZnJ0QCoiLCJqZm1kQCoiLCJqZmV2dEAqIiwiamZhY0AqIl0sImlzcyI6ImpmZmVAMDAwIiwiaWF0IjoxNjE2NTE1NTc1LCJqdGkiOiIzMWJkMDg3Yy04Y2Y4LTQ5NzktYmU2Ny03YzQzNjM4NmExYWEifQ.Xh1v32lwYfpv5Yi8GC8RolWHmDDB4cHs4WQ1D8YfUhwNNB8pQGcwTZBXTPX3ewXbIAAiXJ3Fy6_poda7zXOnDH_Yb9PXHYFj7OIqJvup3J6GzuP3Gx44p0UYmEl2N-XwUTreArwg8VeSQHigGgJoK6SAYM5w17_B2Sh4EsuHyBYqO6YROJjojxqh-nEgmB_Fu25oABfkXXmAK-PfIkRG4kB2KFdfqRe-LPuOWpm6_nIsIK44RcIju_mfRNNbtUpRQiIc9NbGGK-XfyLkLLdxStXZCN3L8HtiA8oBrbAIcK6PY1wW0Yaf_HF4Kq1TFBd6G9u2g7PwPYaQWy8aS6KqFA --url https://artifactorygcp.jfrog.io/artifactory --interactive=false
      - run: tar -czf archive.tar.gz dist
      - run: jfrog rt u "*.gz" testnpm

###      - run: npm publish
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
            name: package
            path: "*.tgz"

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Setup sonarqube
      uses: warchant/setup-sonar-scanner@v3
    - name: Run sonarqube
      env:
        # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: sonar-scanner
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.organization=testorgforweb
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.projectKey=testnpm